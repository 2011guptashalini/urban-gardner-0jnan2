apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: default
  labels:
    app: urban-gardening-assistant
    component: backend
    environment: production
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "HIGH:!aNULL:!MD5"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src 'self'; frame-ancestors 'none'";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.urban-gardening.example.com"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Content-Type,X-Request-ID"
    
    # Request handling
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-rpm: "3000"
    nginx.ingress.kubernetes.io/limit-connections: "100"
    
    # Security features
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On
      SecAuditEngine RelevantOnly
    
    # Compression
    nginx.ingress.kubernetes.io/server-snippet: |
      gzip on;
      gzip_types application/json;
      gzip_min_length 1000;
      gzip_comp_level 6;
    
    # Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/scheme: "https"

spec:
  tls:
    - hosts:
        - api.urban-gardening.example.com
      secretName: backend-tls-cert
  rules:
    - host: api.urban-gardening.example.com
      http:
        paths:
          # API Gateway service
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 80
          
          # Health check endpoint
          - path: /health
            pathType: Exact
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 80
          
          # Metrics endpoint
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 9090